- name: copy binary
  copy:
    src: "{{ work_dir | default(playbook_dir + '/tmp') }}/kubernetes/server/bin/kube-apiserver"
    dest: /usr/local/bin/kube-apiserver
    owner: root
    group: root
    mode: 0755
  become: true

- name: create /etc/kubernetes/ssl
  file:
    path: /etc/kubernetes/ssl
    state: directory
    owner: "{{ kubernetes.user }}"
    group: "{{ kubernetes.group }}"
  become: true

- name: copy CA certificate
  copy:
    src: "{{ work_dir | default(playbook_dir + '/tmp') }}/{{ item }}"
    dest: /etc/kubernetes/ssl/{{ item }}
    owner: "{{ kubernetes.user }}"
    group: "{{ kubernetes.group }}"
    mode: 0600
  with_items:
    - ca.crt
    - ca.key
  become: true
  notify: restart kube-apiserver

- name: generate kubernetes certificate
  include_tasks: cert-kubernetes.yml

- name: generate admin certificate
  include_tasks: cert-admin.yml

- name: generate service-account certificate
  include_tasks: cert-sa.yml

- name: copy kube-apiserver.service
  template:
    src: templates/kube-apiserver.service
    dest: /etc/systemd/system/kube-apiserver.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart kube-apiserver

- name: copy encryption-config.yaml
  template:
    src: templates/encryption-config.yaml
    dest: /etc/kubernetes/encryption-config.yaml
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart kube-apiserver

- name: enable kube-apiserver
  systemd:
    name: kube-apiserver
    state: started
    enabled: true
    daemon_reload: true
  become: true
