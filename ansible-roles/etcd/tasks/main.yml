- name: create group
  ansible.builtin.group:
    name: "{{ etcd.group }}"
    state: present
    system: true
  become: true

- name: create user
  ansible.builtin.user:
    name: "{{ etcd.user }}"
    create_home: true
    group: "{{ etcd.group }}"
    home: /var/lib/etcd
    shell: /usr/bin/nologin
    state: present
    system: true
  become: true

- name: set permission for /var/lib/etcd
  ansible.builtin.file:
    path: /var/lib/etcd
    state: directory
    owner: "{{ etcd.user }}"
    group: "{{ etcd.group }}"
    mode: 0700
  become: true

- name: create download directory
  ansible.builtin.file:
    path: "{{ work_dir | default(playbook_dir + '/tmp') }}"
    state: directory
  delegate_to: localhost
  run_once: true

- name: download package
  ansible.builtin.get_url:
    url: https://github.com/etcd-io/etcd/releases/download/v{{ etcd.version }}/etcd-v{{ etcd.version }}-linux-amd64.tar.gz
    dest: "{{ work_dir | default(playbook_dir + '/tmp') }}/etcd-v{{ etcd.version }}-linux-amd64.tar.gz"
    checksum: "{{ etcd.checksum }}"
  delegate_to: localhost
  run_once: true

- name: extract archive
  ansible.builtin.unarchive:
    src: "{{ work_dir | default(playbook_dir + '/tmp') }}/etcd-v{{ etcd.version }}-linux-amd64.tar.gz"
    dest: "{{ ansible_env.HOME }}"

- name: copy binaries
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/etcd-v{{ etcd.version }}-linux-amd64/{{ item }}"
    dest: /usr/local/bin/{{ item }}
    mode: 0755
    remote_src: true
  with_items:
    - etcd
    - etcdctl
    - etcdutl
  become: true
  notify: restart etcd

- name: copy systemd template
  ansible.builtin.template:
    src: templates/etcd.service
    dest: /etc/systemd/system/etcd.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart etcd

- ansible.builtin.include_tasks: tasks/certificates.yml

- name: enable etcd service
  ansible.builtin.systemd:
    name: etcd
    daemon_reload: true
    enabled: true
    state: started
  become: true
