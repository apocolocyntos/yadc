[Unit]
Description=ETCD
After=network.target

[Service]
Type=simple
Restart=always
ExecStart=/usr/local/bin/etcd \
  --name {{ inventory_hostname }} \
  --cert-file=/etc/etcd/ssl/crt.pem \
  --key-file=/etc/etcd/ssl/key.pem \
  --peer-cert-file=/etc/etcd/ssl/crt.pem \
  --peer-key-file=/etc/etcd/ssl/key.pem \
  --trusted-ca-file=/etc/etcd/ssl/ca.pem \
  --peer-trusted-ca-file=/etc/etcd/ssl/ca.pem \
  --peer-client-cert-auth \
  --client-cert-auth \
  --initial-advertise-peer-urls https://{{ hostvars[inventory_hostname].ansible_facts[network_interface][network_protocol].address }}:2380 \
  --listen-peer-urls https://{{ hostvars[inventory_hostname].ansible_facts[network_interface][network_protocol].address }}:2380 \
  --listen-client-urls https://{{ hostvars[inventory_hostname].ansible_facts[network_interface][network_protocol].address }}:2379,https://127.0.0.1:2379 \
  --advertise-client-urls https://{{ hostvars[inventory_hostname].ansible_facts[network_interface][network_protocol].address }}:2379 \
  --initial-cluster-token etcd-cluster \
  --initial-cluster {% for host in groups['etcd'] %}{{ hostvars[host].ansible_hostname }}=https://{{ hostvars[host].ansible_facts[network_interface][network_protocol].address }}:2380{% if not loop.last %},{% endif %}{% endfor %} \
  --initial-cluster-state new \
  --data-dir=/var/lib/etcd
User={{ etcd.user }}

[Install]
WantedBy=multi-user.target
